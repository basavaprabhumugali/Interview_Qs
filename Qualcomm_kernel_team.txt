BUG: unable to handle kernel NULL pointer dereference at (null) 
IP: [<ffffffffa03e1012>] my_oops_init+0x12/0x21 [oops] 
PGD 7a719067 PUD 7b2b3067 PMD 0 
Oops: 0002 [#1] SMP 
last sysfs file: /sys/devices/virtual/misc/kvm/uevent 
CPU 1 
Pid: 2248, comm: insmod Tainted: P           2.6.33.3-85.fc13.x86_64 
RIP: 0010:[<ffffffffa03e1012>]  [<ffffffffa03e1012>] my_oops_init+0x12/0x21 [oops] 
RSP: 0018:ffff88007ad4bf08  EFLAGS: 00010292 
RAX: 0000000000000018 RBX: ffffffffa03e1000 RCX: 00000000000013b7 
RDX: 0000000000000000 RSI: 0000000000000046 RDI: 0000000000000246 
RBP: ffff88007ad4bf08 R08: ffff88007af1cba0 R09: 0000000000000004 
R10: 0000000000000000 R11: ffff88007ad4bd68 R12: 0000000000000000 
R13: 00000000016b0030 R14: 0000000000019db9 R15: 00000000016b0010 
FS:  00007fb79dadf700(0000) GS:ffff880001e80000(0000) knlGS:0000000000000000 
CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b 
CR2: 0000000000000000 CR3: 000000007a0f1000 CR4: 00000000000006e0 
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 
DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400 
Process insmod (pid: 2248, threadinfo ffff88007ad4a000, task ffff88007a222ea0) 
Stack: 
ffff88007ad4bf38 ffffffff8100205f ffffffffa03de060 ffffffffa03de060 
 0000000000000000 00000000016b0030 ffff88007ad4bf78 ffffffff8107aac9 
 ffff88007ad4bf78 00007fff69f3e814 0000000000019db9 0000000000020000 
Call Trace: 
[<ffffffff8100205f>] do_one_initcall+0x59/0x154 
[<ffffffff8107aac9>] sys_init_module+0xd1/0x230 
[<ffffffff81009b02>] system_call_fastpath+0x16/0x1b 
Code: <c7> 04 25 00 00 00 00 00 00 00 00 31 c0 c9 c3 00 00 00 00 00 00 00 
RIP  [<ffffffffa03e1012>] my_oops_init+0x12/0x21 [oops] 
RSP <ffff88007ad4bf08> 
CR2: 0000000000000000


[3:09 PM] Naveenkumar Parna (Guest)
    $ ls -l
 crw-rw---T 1 root i2c      89,   0 Jan  1  2000 i2c-0
 brw-rw---T 1 root disk      1,   0 Mar  1 20:46 ram0
 brw-rw---T 1 root floppy  179,   0 Mar  1 20:46 mmcblk0
 crw-rw-rw- 1 root root      1,   3 Mar  1 20:46 null
 crw------- 1 root root      4,   0 Mar  1 20:46 tty0
 crw-rw---T 1 root dialout   4,  64 Mar  1 20:46 ttyS0

What are major and minor numbers ?
If in /dev two files has same major number then how it is possible that its of same driver or diffrent driver ?
what is and How to identify char and block device driver ?

Write char driver all basic functions ? 


object: hello.o

		KID= /lib/modules/'uname -r'/build
		
		all 
		   make	-C $(KID) M=(pwd) modules
		   
		clean
		   make -C $(KID) M=(pwd)  clean




Char device driver


How user space can access this fops in char driver?
Explan this open system call in detail.
	open("/dev/qc_interview", IWR);
	
	
	open() ->  __NR_ = 12  -> lib
	
	  __NR_12  = &sys_open -> Process Context
	  
	  
Difference b/w Exception & Interrupts ?

Explain spinlock and mutex and its varients ?
	spinlock_iqr        
	spinlock_irqsave
	

Q- WAP we have 32 bit Reg, clear the bits staring from 5 to position 3.	
sol: 	32 int Reg
	
	set clear 
	clear it   start from bit 5 to postion 3
	
	 ...00000000 1110 0000
o/p  ...00000000 0000 0000
	
#define  (a,b)  ( (a & ~(1<<b)) | (a & ~(1<<(b+1))) | (a & ~(1<<(b+2)))  )
	

Q- Cal the size of struct without using sizeof function.	
strcut abc{
	
	char a;
	int b;
	float c;

};

//strct abc object[2]={0},
strcut abc *one=NULL, *two=NULL;

//object[0]= 1000;
//object[1]=1012;

//one=&object;

printf("%d  \n", (char *)(one+1) - (char *)one);  ( 12 =1012 - 1000)




Q- WAP to GCD(Greatest common divisor) of two postive numbers

GCD -> 4	1, 2, 4  divisor
       16   1, 2, 4, 8, 16 
	ans = 4
	
	FInd out divisro.
	find out common. 
	find which is greated.
	
main()
{
	int n1=4, n2=16;
	int i,out;
	
	for(i=1;i<=n1 && i<=n2;i++)
	{
		if(n1%i==0 && n2%i==0)      // Find out divisor
		{
			out=i;                  // store common and latest divisior
		}
	}
	Printf("GCD = %d \n", out);
}
    	   



WAP to convert Decimal to hex .

10 -      00000000 00000000 00000000 0000 1010
 hexa  -    0x00    0x00       0x00     0x0a

20 -

  20 % 16 = 4
  20/16= 1
  1%16 = 1  
  1/16 =0  
  
  0 1 1
 
 
 num%16 = 
 
 main()
 {
 
	int num=10;
	
	char hexadcimal;
	
	while(num)
	{
		
	
	
	}

 }


You are given a one dimensional array that may contain both positive and negative integers, find the sum of contiguous subarray of numbers which has the largest sum.
From the given array is {-2, -5, 6, -2, -3, 1, 5, -6}, the maximum subarray sum is 7


6 -2 -3 1 5 = 7


 int max(int arr[], int num_ele)
{
	int i,j,k;
	int out[num_ele]={0}, max;

	
	for(i=0;i<num_ele;i++)
	{
		for(j=i;j<num_ele;j++)
			max=max+arr[i];
			max=max+arr[i];
		
		out[k]=max;
		
	}

	int largest=out[0];
	for(i=1;i<num_ele;i++)
	{
		if(largest < out[i])
			largest out[i];		
	}
} 




















































































































































	
	
	


strcut file_operations fops{

		.open = qc_open,
		.relase = qc_release,
		.write
		.read
			.......
}


int init()
{
	dynamic_chrdev_alloc(dev_t dev, );
	
	cdev_init();
	cdev_add();
	
	struct class *class=device_class();
	device_file(&lass, "qc_interview")



}

void exit()
{

	destory_device();
	destory_class();
	destory_cdev();
	destroy_chrdev(&dev);

}














































































